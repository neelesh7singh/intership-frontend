{"version":3,"sources":["pages/Auth.jsx","pages/Posts.jsx","pages/PostForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Auth","props","useState","username","setUsername","useremail","setUseremail","userpassword","setUserpassword","userpassword2","setUserpassword2","className","onSubmit","e","preventDefault","formData","FormData","append","axios","post","headers","withCredentials","then","response","console","log","data","status","alert","message","history","push","catch","error","type","name","onChange","target","value","Posts","setdata","lat","setlat","lng","setlng","deg2rad","deg","Math","PI","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","showPosition","position","coords","latitude","longitude","useEffect","get","navigator","geolocation","getCurrentPosition","i","length","addDist","sort","b","distance","map","img","src","replace","alt","about","country","_id","convert","require","PostForm","setImg","setAbout","config","result1","xml2json","compact","spaces","JSON","parse","geodata","nearest","latt","_text","longt","maxlength","files","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e007e80a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Auth(props) {\n  const [username, setUsername] = useState('');\n  const [useremail, setUseremail] = useState('');\n  const [userpassword, setUserpassword] = useState('');\n  const [userpassword2, setUserpassword2] = useState('');\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', username);\n    formData.append('email', useremail);\n    if (userpassword !== userpassword2) {\n      alert('Passwords did not match');\n      return;\n    }\n    formData.append('password', userpassword);\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n      withCredentials: true,\n    };\n\n    // Request to backend\n    axios\n      .post('http://localhost:3000/api/v1/auth/signup', formData, config)\n      .then((response) => {\n        console.log(response);\n        if (response.data.status === 'Failed') alert(response.data.message);\n        else props.history.push('/posts');\n      })\n      .catch((error) => {});\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('email', useremail);\n    formData.append('password', userpassword);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n      withCredentials: true,\n    };\n\n    // Request to backend\n    axios\n      .post('http://localhost:3000/api/v1/auth/login', formData, config)\n      .then((response) => {\n        console.log(response);\n        if (response.data.status === 'Failed') alert(response.data.message);\n        else props.history.push('/posts');\n      })\n      .catch((error) => {});\n  };\n  return (\n    <div className='row'>\n      <div className='col'>\n        <form onSubmit={handleSignUp}>\n          <legend className=' mt-5'>SignUp</legend>\n          <div className='mb-3'>\n            <label className='form-label'>Name:</label>\n            <input\n              type='text'\n              name='name'\n              className='form-control'\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className='mb-3'>\n            <label className='form-label'>Emal:</label>\n            <input\n              type='text'\n              name='email'\n              className='form-control'\n              onChange={(e) => setUseremail(e.target.value)}\n            />\n          </div>\n          <div className='mb-3'>\n            <label className='form-label'>Password:</label>\n            <input\n              type='password'\n              name='password'\n              className='form-control'\n              onChange={(e) => setUserpassword(e.target.value)}\n            />\n          </div>\n          <div className='mb-3'>\n            <label className='form-label'>Confirm Password:</label>\n            <input\n              type='password'\n              name='password'\n              className='form-control'\n              onChange={(e) => setUserpassword2(e.target.value)}\n            />\n          </div>\n          <button type='submit' className='btn btn-primary'>\n            Upload\n          </button>\n        </form>\n      </div>\n      <div className='col'>\n        <form onSubmit={handleLogin}>\n          <legend className=' mt-5'>LogIn</legend>\n          <div className='mb-3'>\n            <label className='form-label'>Emal:</label>\n            <input\n              type='text'\n              name='email'\n              className='form-control'\n              onChange={(e) => setUseremail(e.target.value)}\n            />\n          </div>\n          <div className='mb-3'>\n            <label className='form-label'>Password:</label>\n            <input\n              type='password'\n              name='password'\n              className='form-control'\n              onChange={(e) => setUserpassword(e.target.value)}\n            />\n          </div>\n          <button type='submit' className='btn btn-primary'>\n            Upload\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Auth;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Posts(props) {\n  const [data, setdata] = useState([]);\n  const [lat, setlat] = useState('');\n  const [lng, setlng] = useState('');\n\n  function deg2rad(deg) {\n    return deg * (Math.PI / 180);\n  }\n\n  // Function to calculate distance between two coordinates\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2 - lat1); // deg2rad below\n    var dLon = deg2rad(lon2 - lon1);\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(deg2rad(lat1)) *\n        Math.cos(deg2rad(lat2)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n    return d;\n  };\n\n  // Addind distance to every post with respect to user coordinate\n  const addDist = (data) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      alert('Geolocation is not supported by this browser.');\n    }\n    for (let i = 0; i < data.length; i++) {\n      data[i]['distance'] = calculateDistance(\n        lat,\n        lng,\n        data[i]['lat'],\n        data[i]['lng']\n      );\n    }\n  };\n  const showPosition = (position) => {\n    setlat(position.coords.latitude);\n    setlng(position.coords.longitude);\n  };\n\n  useEffect(() => {\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n      withCredentials: true,\n    };\n\n    // Request to get all the posts from backend\n    axios\n      .get('http://localhost:3000/api/v1/posts/all', config)\n      .then((response) => {\n        if (response.data.status === 'Failed') {\n          props.history.push('/');\n        }\n        addDist(response.data);\n        response.data.sort(function (a, b) {\n          return a.distance - b.distance;\n        });\n        setdata(response.data);\n      })\n      .catch((error) => {});\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <h1 className='text-center mt-5 mb-3'>Posts</h1>\n      {data.map((post) => {\n        return (\n          <div key={post._id} className='border border-3 mb-5 rounded'>\n            {post.img && (\n              <img\n                className='rounded mx-auto d-block mt-3'\n                src={'http://localhost:3000/' + post.img.replace('public/', '')}\n                alt=''\n              />\n            )}\n            {post.about && <p className='text-center mt-3'> {post.about} </p>}\n            <p className='text-end me-3 fw-bold'> Location - {post.country} </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Posts;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nvar convert = require('xml-js');\n\nfunction PostForm(props) {\n  const [img, setImg] = useState(null);\n  const [about, setAbout] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('about', about);\n    formData.append('img', img);\n    let config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    };\n\n    // Request to get random loacation on land\n    axios\n      .get(\n        'https://cors-anywhere.herokuapp.com/https://api.3geonames.org/?randomland=yes',\n        config\n      )\n      .then((response) => {\n        var result1 = convert.xml2json(response.data, {\n          compact: true,\n          spaces: 4,\n        });\n        result1 = JSON.parse(result1);\n        formData.append('lat', result1.geodata.nearest.latt._text);\n        formData.append('lng', result1.geodata.nearest.longt._text);\n\n        config = {\n          ...config,\n          withCredentials: true,\n        };\n\n        // Request to the backend\n        axios\n          .post('http://localhost:3000/api/v1/posts/create', formData, config)\n          .then((response) => {\n            if (response.data.status === 'Failed') {\n              if (response.data.message === 'Please login first')\n                props.history.push('/');\n              else alert(response.data.message);\n              console.log(response);\n              return;\n            }\n            props.history.push('/posts');\n          })\n          .catch((error) => {});\n      })\n      .catch((error) => {});\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <legend className=' mt-5'>LogIn</legend>\n        <div className='mb-3'>\n          <label className='form-label'>About :</label>\n          <input\n            type='text'\n            name='about'\n            maxlength='500'\n            className='form-control'\n            onChange={(e) => setAbout(e.target.value)}\n          />\n        </div>\n        <div className='mb-3'>\n          <label className='form-label'>Imgage:</label>\n          <input\n            type='file'\n            name='img'\n            className='form-control'\n            onChange={(e) => setImg(e.target.files[0])}\n          />\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Upload\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default PostForm;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport Auth from './pages/Auth';\nimport Posts from './pages/Posts';\nimport PostForm from './pages/PostForm';\n\nfunction App() {\n  return (\n    <div className='App container'>\n      <nav className='navbar'>\n        <Link className='navbar-brand' to='/posts'>\n          Home\n        </Link>\n        <Link className='navbar-link' to='/create'>\n          Create Post\n        </Link>\n      </nav>\n      <Switch>\n        <Route exact path='/' component={Auth} />\n        <Route exact path='/posts' component={Posts} />\n        <Route exact path='/create' component={PostForm} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}